"""add_audio_file_path_to_manuals

Revision ID: eff233a339fd
Revises: 4248d87c7fa9
Create Date: 2025-07-13 22:53:18.179064

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eff233a339fd'
down_revision: Union[str, None] = '4248d87c7fa9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workspace_members')
    op.drop_index(op.f('ix_workspaces_id'), table_name='workspaces')
    op.drop_table('workspaces')
    op.add_column('manuals', sa.Column('audio_file_path', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('manuals', 'audio_file_path')
    op.create_table('workspaces',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='workspaces_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='workspaces_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_workspaces_id'), 'workspaces', ['id'], unique=False)
    op.create_table('workspace_members',
    sa.Column('workspace_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('joined_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('workspace_members_user_id_fkey')),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('workspace_members_workspace_id_fkey')),
    sa.PrimaryKeyConstraint('workspace_id', 'user_id', name=op.f('workspace_members_pkey'))
    )
    # ### end Alembic commands ###
